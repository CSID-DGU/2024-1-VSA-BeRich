plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.berich'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//lombok-어노테이션 사용용이
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//스프링시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 유효성 검증을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	//jwt 토큰 인증
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	// properties문서와 java객체 매핑 자동화
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	

    // WebSocket이 필요할 경우
    //implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
	useJUnitPlatform()
}
